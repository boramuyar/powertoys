name: Publish Packages

on:
  push:
    branches:
      - main
    tags:
      - "v*"
  workflow_dispatch:
    inputs:
      version:
        description: "Version to publish (patch, minor, major, or specific version)"
        required: true
        default: "patch"
        type: choice
        options:
          - patch
          - minor
          - major
          - prepatch
          - preminor
          - premajor
          - prerelease

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          registry-url: "https://registry.npmjs.org"

      - name: Setup PNPM
        uses: pnpm/action-setup@v3
        with:
          version: 8
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install

      - name: Build packages
        run: pnpm build:packages

      - name: Configure Git
        run: |
          git config --global user.name "GitHub Actions Bot"
          git config --global user.email "actions@github.com"

      - name: Version packages
        if: github.event_name == 'workflow_dispatch'
        run: |
          # Get list of changed packages
          CHANGED_PACKAGES=$(pnpm list --filter="[origin/main]" --json | jq -r '.[].name')

          # If no packages changed, exit gracefully
          if [ -z "$CHANGED_PACKAGES" ]; then
            echo "No packages have changed. Skipping version bump."
            exit 0
          fi

          # For each changed package, bump its version
          for PKG in $CHANGED_PACKAGES; do
            echo "Bumping version for $PKG"
            (cd $(pnpm list --filter="$PKG" --json | jq -r '.[].path') && npm version ${{ github.event.inputs.version }} --no-git-tag-version)
          done

          git add .
          git commit -m "chore: bump version to ${{ github.event.inputs.version }} for changed packages"
          git push

      - name: Publish to npm
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: pnpm -r publish --access public --no-git-checks

      - name: Create GitHub Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          generate_release_notes: true
